<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class dataPhpSeeder extends Seeder
{
    public $questions_php = [];
    public $essays_php = [];
    public function __construct(){
    $this->questions_php =
    [
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\necho 1 + 1;\n?>\n```',
            'option_1' => '2',
            'option_2' => '11',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\necho "Hello " . "World";\n?>\n```',
            'option_1' => 'Hello World',
            'option_2' => 'HelloWorld',
            'option_3' => 'Hello',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$number = 10;\necho $number;\n?>\n```',
            'option_1' => '10',
            'option_2' => 'number',
            'option_3' => 'undefined',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP";\necho $var[1];\n?>\n```',
            'option_1' => 'H',
            'option_2' => 'P',
            'option_3' => 'P',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$colors = array("red", "green", "blue");\necho $colors[1];\n?>\n```',
            'option_1' => 'green',
            'option_2' => 'red',
            'option_3' => 'blue',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$names = array("Alice", "Bob", "Charlie");\necho count($names);\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$x = 5;\n$y = 10;\necho $x + $y;\n?>\n```',
            'option_1' => '15',
            'option_2' => '510',
            'option_3' => '5',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello, World!";\necho strlen($var);\n?>\n```',
            'option_1' => '13',
            'option_2' => '12',
            'option_3' => '14',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 5;\necho $var++;\n?>\n```',
            'option_1' => '5',
            'option_2' => '6',
            'option_3' => 'undefined',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$age = 20;\nif ($age > 18) {\n    echo "Adult";\n} else {\n    echo "Minor";\n}\n?>\n```',
            'option_1' => 'Adult',
            'option_2' => 'Minor',
            'option_3' => 'undefined',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$number = 3;\necho $number * 2;\n?>\n```',
            'option_1' => '6',
            'option_2' => '5',
            'option_3' => '8',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$numbers = array(1, 2, 3);\necho $numbers[2];\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "10";\necho $var + 5;\n?>\n```',
            'option_1' => '15',
            'option_2' => '105',
            'option_3' => '10',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$day = "Monday";\necho "Today is " . $day;\n?>\n```',
            'option_1' => 'Today is Monday',
            'option_2' => 'Today is Monday',
            'option_3' => 'Today is',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$x = 10;\n$y = 5;\necho $x / $y;\n?>\n```',
            'option_1' => '2',
            'option_2' => '5',
            'option_3' => '10',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$number = 100;\necho number_format($number, 2);\n?>\n```',
            'option_1' => '100.00',
            'option_2' => '100',
            'option_3' => '100.0',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho $var[1];\n?>\n```',
            'option_1' => 'e',
            'option_2' => 'H',
            'option_3' => 'l',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$sum = 1 + 2 + 3;\necho $sum;\n?>\n```',
            'option_1' => '6',
            'option_2' => '5',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$bool = true;\necho $bool ? "Yes" : "No";\n?>\n```',
            'option_1' => 'Yes',
            'option_2' => 'No',
            'option_3' => 'true',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$price = 99.99;\necho round($price);\n?>\n```',
            'option_1' => '100',
            'option_2' => '99',
            'option_3' => '100.00',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$number = 8;\necho $number % 3;\n?>\n```',
            'option_1' => '2',
            'option_2' => '1',
            'option_3' => '0',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "World";\necho strtoupper($var);\n?>\n```',
            'option_1' => 'WORLD',
            'option_2' => 'world',
            'option_3' => 'World',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 5;\necho $var--;\n?>\n```',
            'option_1' => '5',
            'option_2' => '4',
            'option_3' => '6',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho ucfirst($var);\n?>\n```',
            'option_1' => 'Hello',
            'option_2' => 'hello',
            'option_3' => 'HELLO',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "123abc";\necho is_numeric($var);\n?>\n```',
            'option_1' => 'false',
            'option_2' => 'true',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$age = 21;\necho ($age >= 18) ? "Adult" : "Minor";\n?>\n```',
            'option_1' => 'Adult',
            'option_2' => 'Minor',
            'option_3' => '21',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP";\necho strlen($var);\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '4',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$numbers = array(1, 2, 3);\necho array_sum($numbers);\n?>\n```',
            'option_1' => '6',
            'option_2' => '5',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$fruit = "Apple";\necho substr($fruit, 1, 3);\n?>\n```',
            'option_1' => 'ppl',
            'option_2' => 'App',
            'option_3' => 'ple',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = array("one", "two", "three");\necho implode(", ", $var);\n?>\n```',
            'option_1' => 'one, two, three',
            'option_2' => 'one,two,three',
            'option_3' => 'one two three',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "10 apples";\necho (int)$var;\n?>\n```',
            'option_1' => '10',
            'option_2' => '0',
            'option_3' => '10 apples',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho strpos($var, "World");\n?>\n```',
            'option_1' => '6',
            'option_2' => '0',
            'option_3' => '5',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 15;\necho $var % 4;\n?>\n```',
            'option_1' => '3',
            'option_2' => '7',
            'option_3' => '15',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello world";\necho ucwords($var);\n?>\n```',
            'option_1' => 'Hello World',
            'option_2' => 'HELLO WORLD',
            'option_3' => 'hello world',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho str_repeat($var, 3);\n?>\n```',
            'option_1' => 'testtesttest',
            'option_2' => 'testtest',
            'option_3' => 'testtesttesttest',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP";\necho strtolower($var);\n?>\n```',
            'option_1' => 'php',
            'option_2' => 'PHP',
            'option_3' => 'Php',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 100;\necho number_format($var, 2);\n?>\n```',
            'option_1' => '100.00',
            'option_2' => '100',
            'option_3' => '100.0',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 7;\necho $var * 3;\n?>\n```',
            'option_1' => '21',
            'option_2' => '7',
            'option_3' => '30',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho strlen($var);\n?>\n```',
            'option_1' => '5',
            'option_2' => '6',
            'option_3' => '4',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "123";\necho $var * 2;\n?>\n```',
            'option_1' => '246',
            'option_2' => '123123',
            'option_3' => '1232',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 10;\necho $var--;\n?>\n```',
            'option_1' => '10',
            'option_2' => '9',
            'option_3' => '11',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP";\necho $var[0];\n?>\n```',
            'option_1' => 'P',
            'option_2' => 'H',
            'option_3' => 'p',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP is fun";\necho str_replace("fun", "awesome", $var);\n?>\n```',
            'option_1' => 'PHP is awesome',
            'option_2' => 'PHP is fun',
            'option_3' => 'PHP is',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "2024";\necho (int)$var;\n?>\n```',
            'option_1' => '2024',
            'option_2' => '202',
            'option_3' => '24',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = array("a" => 1, "b" => 2);\necho $var["a"];\n?>\n```',
            'option_1' => '1',
            'option_2' => '2',
            'option_3' => 'a',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho ucfirst($var);\n?>\n```',
            'option_1' => 'Hello',
            'option_2' => 'HELLO',
            'option_3' => 'hello',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "  spaces  ";\necho trim($var);\n?>\n```',
            'option_1' => 'spaces',
            'option_2' => '  spaces',
            'option_3' => 'spaces  ',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello, PHP";\necho explode(", ", $var)[1];\n?>\n```',
            'option_1' => 'PHP',
            'option_2' => 'Hello',
            'option_3' => 'Hello, PHP',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "2024";\necho $var + 1;\n?>\n```',
            'option_1' => '2025',
            'option_2' => '2024',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "12.34";\necho round($var);\n?>\n```',
            'option_1' => '12',
            'option_2' => '13',
            'option_3' => '12.34',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho strrev($var);\n?>\n```',
            'option_1' => 'olleH',
            'option_2' => 'Hello',
            'option_3' => 'Helo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "   test   ";\necho strlen($var);\n?>\n```',
            'option_1' => '10',
            'option_2' => '7',
            'option_3' => '6',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 3;\necho $var ** 2;\n?>\n```',
            'option_1' => '9',
            'option_2' => '6',
            'option_3' => '33',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho strlen(trim($var));\n?>\n```',
            'option_1' => '5',
            'option_2' => '7',
            'option_3' => '4',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 5;\necho $var ** 2;\n?>\n```',
            'option_1' => '25',
            'option_2' => '10',
            'option_3' => '20',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "  text  ";\necho strlen(trim($var));\n?>\n```',
            'option_1' => '4',
            'option_2' => '7',
            'option_3' => '6',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "123";\necho (int)$var + 1;\n?>\n```',
            'option_1' => '124',
            'option_2' => '123',
            'option_3' => '12',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "string";\necho substr($var, -3);\n?>\n```',
            'option_1' => 'ing',
            'option_2' => 'str',
            'option_3' => 'ing',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = 3;\necho $var % 2;\n?>\n```',
            'option_1' => '1',
            'option_2' => '2',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho str_repeat($var, 2);\n?>\n```',
            'option_1' => 'hellohello',
            'option_2' => 'hellohellohello',
            'option_3' => 'hello',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3, 4, 5];\necho array_sum($var);\n?>\n```',
            'option_1' => '15',
            'option_2' => '5',
            'option_3' => '10',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "2024";\necho $var . 1;\n?>\n```',
            'option_1' => '20241',
            'option_2' => '2025',
            'option_3' => '2024',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho strtoupper($var);\n?>\n```',
            'option_1' => 'HELLO',
            'option_2' => 'Hello',
            'option_3' => 'HELLO',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho count($var);\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho strpos($var, "e");\n?>\n```',
            'option_1' => '1',
            'option_2' => '0',
            'option_3' => '2',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = ["a" => 1, "b" => 2];\necho array_key_exists("a", $var);\n?>\n```',
            'option_1' => '1',
            'option_2' => 'true',
            'option_3' => 'false',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho implode("-", $var);\n?>\n```',
            'option_1' => '1-2-3',
            'option_2' => '123',
            'option_3' => '1 2 3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "2024";\necho (float)$var;\n?>\n```',
            'option_1' => '2024.0',
            'option_2' => '2024',
            'option_3' => '2024.00',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho substr($var, 1, 2);\n?>\n```',
            'option_1' => 'es',
            'option_2' => 'te',
            'option_3' => 'test',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho ucwords($var);\n?>\n```',
            'option_1' => 'Hello',
            'option_2' => 'HELLO',
            'option_3' => 'Hello',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3, 4];\necho array_pop($var);\n?>\n```',
            'option_1' => '4',
            'option_2' => '1',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho str_repeat($var, 3);\n?>\n```',
            'option_1' => 'testtesttest',
            'option_2' => 'testtest',
            'option_3' => 'testtesttesttest',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_shift($var);\n?>\n```',
            'option_1' => '1',
            'option_2' => '3',
            'option_3' => '2',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "2024";\necho strrev($var);\n?>\n```',
            'option_1' => '4202',
            'option_2' => '2024',
            'option_3' => '4042',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello, World!";\necho substr($var, 7);\n?>\n```',
            'option_1' => 'World!',
            'option_2' => 'Hello, World!',
            'option_3' => 'World',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "42";\necho intval($var);\n?>\n```',
            'option_1' => '42',
            'option_2' => '42.0',
            'option_3' => '4',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho max($var);\n?>\n```',
            'option_1' => '3',
            'option_2' => '1',
            'option_3' => '2',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "string";\necho strlen($var);\n?>\n```',
            'option_1' => '6',
            'option_2' => '7',
            'option_3' => '5',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abc";\necho str_pad($var, 5, "x");\n?>\n```',
            'option_1' => 'abcxx',
            'option_2' => 'xxabc',
            'option_3' => 'abc',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "a,b,c";\necho explode(",", $var)[1];\n?>\n```',
            'option_1' => 'b',
            'option_2' => 'a',
            'option_3' => 'c',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_pop($var);\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "php";\necho ucfirst($var);\n?>\n```',
            'option_1' => 'Php',
            'option_2' => 'php',
            'option_3' => 'PHP',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3, 4];\necho array_sum($var);\n?>\n```',
            'option_1' => '10',
            'option_2' => '4',
            'option_3' => '7',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho substr($var, 0, 5);\n?>\n```',
            'option_1' => 'Hello',
            'option_2' => 'World',
            'option_3' => 'Hello World',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho str_replace("o", "a", $var);\n?>\n```',
            'option_1' => 'faa',
            'option_2' => 'foo',
            'option_3' => 'fao',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho str_repeat($var, 4);\n?>\n```',
            'option_1' => 'testtesttesttest',
            'option_2' => 'testtesttest',
            'option_3' => 'testtesttesttesttest',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abc";\necho strlen($var);\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '4',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abc";\necho str_replace("b", "", $var);\n?>\n```',
            'option_1' => 'ac',
            'option_2' => 'ab',
            'option_3' => 'bc',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho str_pad($var, 5, "x");\n?>\n```',
            'option_1' => 'fooxx',
            'option_2' => 'xxfoo',
            'option_3' => 'foo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho ucfirst($var);\n?>\n```',
            'option_1' => 'Foo',
            'option_2' => 'foo',
            'option_3' => 'FOO',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho strtoupper($var);\n?>\n```',
            'option_1' => 'TEST',
            'option_2' => 'test',
            'option_3' => 'Test',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho ucwords($var);\n?>\n```',
            'option_1' => 'Hello',
            'option_2' => 'HELLO',
            'option_3' => 'hello',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP";\necho strtolower($var);\n?>\n```',
            'option_1' => 'php',
            'option_2' => 'PHP',
            'option_3' => 'Php',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho str_pad($var, 8, "-");\n?>\n```',
            'option_1' => 'test----',
            'option_2' => '-test---',
            'option_3' => 'test',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello world";\necho ucfirst($var);\n?>\n```',
            'option_1' => 'Hello world',
            'option_2' => 'hello world',
            'option_3' => 'Hello World',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_shift($var);\n?>\n```',
            'option_1' => '1',
            'option_2' => '2',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "a,b,c";\necho implode("|", explode(",", $var));\n?>\n```',
            'option_1' => 'a|b|c',
            'option_2' => 'a,b,c',
            'option_3' => 'a b c',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho strtolower(substr($var, 6));\n?>\n```',
            'option_1' => 'world',
            'option_2' => 'World',
            'option_3' => 'hello world',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho count($var);\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abc";\necho str_repeat($var, 2);\n?>\n```',
            'option_1' => 'abcabc',
            'option_2' => 'abc',
            'option_3' => 'abcabcabc',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abc";\necho strrev($var);\n?>\n```',
            'option_1' => 'cba',
            'option_2' => 'abc',
            'option_3' => 'ab',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abc";\necho strtr($var, "a", "x");\n?>\n```',
            'option_1' => 'xbc',
            'option_2' => 'xbc',
            'option_3' => 'abc',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello world";\necho str_replace("world", "", $var);\n?>\n```',
            'option_1' => 'hello ',
            'option_2' => 'hello world',
            'option_3' => 'world',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abcd";\necho substr($var, 1, 2);\n?>\n```',
            'option_1' => 'bc',
            'option_2' => 'abcd',
            'option_3' => 'ab',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho str_repeat($var, 2);\n?>\n```',
            'option_1' => 'foofoo',
            'option_2' => 'foo',
            'option_3' => 'fofoo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho str_pad($var, 10, "-");\n?>\n```',
            'option_1' => 'hello-----',
            'option_2' => '-----hello',
            'option_3' => 'hello',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho strtoupper($var);\n?>\n```',
            'option_1' => 'FOO',
            'option_2' => 'foo',
            'option_3' => 'Foo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho strtolower($var);\n?>\n```',
            'option_1' => 'foo',
            'option_2' => 'FOO',
            'option_3' => 'Foo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "string";\necho strlen($var);\n?>\n```',
            'option_1' => '6',
            'option_2' => '7',
            'option_3' => '5',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho str_replace("World", "PHP", $var);\n?>\n```',
            'option_1' => 'Hello PHP',
            'option_2' => 'Hello World',
            'option_3' => 'Hello PHP World',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_sum($var);\n?>\n```',
            'option_1' => '6',
            'option_2' => '5',
            'option_3' => '7',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho str_repeat($var, 2);\n?>\n```',
            'option_1' => 'testtest',
            'option_2' => 'test',
            'option_3' => 'testtesttest',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho strlen($var);\n?>\n```',
            'option_1' => '4',
            'option_2' => '5',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\n$var2 = "World";\necho sprintf("%s %s", $var, $var2);\n?>\n```',
            'option_1' => 'Hello World',
            'option_2' => 'Hello',
            'option_3' => 'World',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\n$var2 = [4, 5, 6];\necho implode(",", array_merge($var, $var2));\n?>\n```',
            'option_1' => '1,2,3,4,5,6',
            'option_2' => '1,2,3',
            'option_3' => '4,5,6',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "123abc";\necho preg_replace("/[0-9]/", "", $var);\n?>\n```',
            'option_1' => 'abc',
            'option_2' => '123',
            'option_3' => 'Error',
            'option_4' => '123abc',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho ucwords(strtolower($var));\n?>\n```',
            'option_1' => 'Hello World',
            'option_2' => 'hello world',
            'option_3' => 'Hello world',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho trim($var, "t");\n?>\n```',
            'option_1' => 'es',
            'option_2' => 'test',
            'option_3' => 'Error',
            'option_4' => 'est',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho str_replace("World", "PHP", $var);\n?>\n```',
            'option_1' => 'Hello PHP',
            'option_2' => 'Hello World',
            'option_3' => 'Hello PHP World',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_sum($var);\n?>\n```',
            'option_1' => '6',
            'option_2' => '5',
            'option_3' => '7',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho str_repeat($var, 3);\n?>\n```',
            'option_1' => 'testtesttest',
            'option_2' => 'testtest',
            'option_3' => 'testtesttesttest',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho strtolower($var);\n?>\n```',
            'option_1' => 'hello',
            'option_2' => 'Hello',
            'option_3' => 'HELLO',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "a,b,c";\necho implode("-", explode(",", $var));\n?>\n```',
            'option_1' => 'a-b-c',
            'option_2' => 'a,b,c',
            'option_3' => 'a b c',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "a,b,c";\necho explode(",", $var)[2];\n?>\n```',
            'option_1' => 'c',
            'option_2' => 'a',
            'option_3' => 'b',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_shift($var);\n?>\n```',
            'option_1' => '1',
            'option_2' => '2',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3, 4];\necho array_pop($var);\n?>\n```',
            'option_1' => '4',
            'option_2' => '3',
            'option_3' => '2',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho str_pad($var, 5, "-");\n?>\n```',
            'option_1' => 'foo--',
            'option_2' => '--foo',
            'option_3' => 'foo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho ucfirst($var);\n?>\n```',
            'option_1' => 'Foo',
            'option_2' => 'foo',
            'option_3' => 'FOO',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho strtoupper($var);\n?>\n```',
            'option_1' => 'FOO',
            'option_2' => 'foo',
            'option_3' => 'Foo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho substr($var, 6, 5);\n?>\n```',
            'option_1' => 'World',
            'option_2' => 'Hello',
            'option_3' => 'o Wor',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "test";\necho strtr($var, "t", "x");\n?>\n```',
            'option_1' => 'xex',
            'option_2' => 'text',
            'option_3' => 'tete',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho implode("-", array_reverse($var));\n?>\n```',
            'option_1' => '3-2-1',
            'option_2' => '1-2-3',
            'option_3' => '2-3-1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "abc";\necho str_replace("b", "", $var);\n?>\n```',
            'option_1' => 'ac',
            'option_2' => 'abc',
            'option_3' => 'a',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_key_first($var);\n?>\n```',
            'option_1' => '0',
            'option_2' => '1',
            'option_3' => '2',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1 => "a", 3 => "b", 2 => "c"];\necho key(array_values($var));\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '1',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_search(2, $var);\n?>\n```',
            'option_1' => '1',
            'option_2' => '2',
            'option_3' => '0',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "123";\necho $var + 1;\n?>\n```',
            'option_1' => '124',
            'option_2' => '123',
            'option_3' => 'Error',
            'option_4' => '1',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "true";\necho (bool) $var;\n?>\n```',
            'option_1' => '1',
            'option_2' => '0',
            'option_3' => 'true',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "null";\necho is_null($var);\n?>\n```',
            'option_1' => '0',
            'option_2' => '1',
            'option_3' => 'null',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "5";\necho (int) $var + 1;\n?>\n```',
            'option_1' => '6',
            'option_2' => '5',
            'option_3' => '51',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho $var[0];\n?>\n```',
            'option_1' => 'f',
            'option_2' => 'o',
            'option_3' => 'foo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = ["a", "b", "c"];\necho $var[1];\n?>\n```',
            'option_1' => 'b',
            'option_2' => 'a',
            'option_3' => 'c',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho ucfirst(strtoupper($var));\n?>\n```',
            'option_1' => 'Hello',
            'option_2' => 'HELLO',
            'option_3' => 'HELLO',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho strlen(strstr($var, "World"));\n?>\n```',
            'option_1' => '5',
            'option_2' => '6',
            'option_3' => '11',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho substr_replace($var, "World", 0, 5);\n?>\n```',
            'option_1' => 'World',
            'option_2' => 'HelloWorld',
            'option_3' => 'Error',
            'option_4' => 'Hello',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_product($var);\n?>\n```',
            'option_1' => '6',
            'option_2' => '9',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "   foo   ";\necho trim($var);\n?>\n```',
            'option_1' => 'foo',
            'option_2' => '   foo   ',
            'option_3' => 'Error',
            'option_4' => 'foo ',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "a";\necho ord($var);\n?>\n```',
            'option_1' => '97',
            'option_2' => '65',
            'option_3' => 'Error',
            'option_4' => 'a',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho md5($var);\n?>\n```',
            'option_1' => 'acbd18db4cc2f85cedef654fccc4a4d8',
            'option_2' => 'd41d8cd98f00b204e9800998ecf8427e',
            'option_3' => 'Error',
            'option_4' => 'foo',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "a,b,c";\necho count(explode(",", $var));\n?>\n```',
            'option_1' => '3',
            'option_2' => '2',
            'option_3' => '4',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1 => "a", 2 => "b"];\necho array_key_last($var);\n?>\n```',
            'option_1' => '2',
            'option_2' => '1',
            'option_3' => 'Error',
            'option_4' => '0',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho sha1($var);\n?>\n```',
            'option_1' => 'acbd18db4cc2f85cedef654fccc4a4d8',
            'option_2' => '9c56a7f6c8c4583e22f1e2edff75fa11',
            'option_3' => 'Error',
            'option_4' => 'foo',
            'answer' => 2,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_sum(array_map(function($item) { return $item * 2; }, $var));\n?>\n```',
            'option_1' => '12',
            'option_2' => '18',
            'option_3' => '6',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "5";\necho (int) ($var * 2);\n?>\n```',
            'option_1' => '10',
            'option_2' => '5',
            'option_3' => 'Error',
            'option_4' => '52',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho count(array_filter($var, function($item) { return $item > 1; }));\n?>\n```',
            'option_1' => '2',
            'option_2' => '1',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello";\necho str_rot13($var);\n?>\n```',
            'option_1' => 'Uryyb',
            'option_2' => 'Hello',
            'option_3' => 'Error',
            'option_4' => 'uryyb',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho strpos($var, "o");\n?>\n```',
            'option_1' => '1',
            'option_2' => '0',
            'option_3' => '2',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = ["a" => "foo", "b" => "bar"];\necho array_key_first($var);\n?>\n```',
            'option_1' => 'a',
            'option_2' => 'b',
            'option_3' => 'foo',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3];\necho array_reduce($var, function($carry, $item) { return $carry + $item; });\n?>\n```',
            'option_1' => '6',
            'option_2' => '3',
            'option_3' => '9',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "foo";\necho strtolower(substr($var, 0, 1)) . strtoupper(substr($var, 1));\n?>\n```',
            'option_1' => 'fOO',
            'option_2' => 'Foo',
            'option_3' => 'FOO',
            'option_4' => 'Error',
            'answer' => 2,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Hello World";\necho implode(" ", explode(" ", $var, -1));\n?>\n```',
            'option_1' => 'Hello World',
            'option_2' => 'HelloWorld',
            'option_3' => 'Hello',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3, 4];\necho array_pop($var);\necho array_shift($var);\n?>\n```',
            'option_1' => '43',
            'option_2' => '34',
            'option_3' => 'Error',
            'option_4' => '32',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "example@example.com";\necho substr($var, strrpos($var, "@") + 1);\n?>\n```',
            'option_1' => 'example.com',
            'option_2' => 'com',
            'option_3' => '@example.com',
            'option_4' => 'Error',
            'answer' => 2,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = [1, 2, 3, 4];\necho array_slice($var, 1, 2);\n?>\n```',
            'option_1' => '[2, 3]',
            'option_2' => '2, 3',
            'option_3' => '[2, 3, 4]',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP";\necho strtolower($var);\n?>\n```',
            'option_1' => 'php',
            'option_2' => 'PHP',
            'option_3' => 'Error',
            'option_4' => 'phP',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello world";\necho ucwords($var);\n?>\n```',
            'option_1' => 'Hello World',
            'option_2' => 'hello world',
            'option_3' => 'HELLO WORLD',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello";\necho str_pad($var, 10, "-");\n?>\n```',
            'option_1' => 'hello-----',
            'option_2' => 'hello',
            'option_3' => 'Error',
            'option_4' => 'hello--',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "12345";\necho str_split($var, 2);\n?>\n```',
            'option_1' => '[12, 34, 5]',
            'option_2' => '[12, 34, 56]',
            'option_3' => '[1, 2, 3, 4, 5]',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "PHP";\necho str_repeat($var, 3);\n?>\n```',
            'option_1' => 'PHPPHPPHP',
            'option_2' => 'PHP PHP PHP',
            'option_3' => 'PHP PHPPHP',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "12345";\necho substr($var, -3);\n?>\n```',
            'option_1' => '345',
            'option_2' => '123',
            'option_3' => '45',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "Test";\necho strrev($var);\n?>\n```',
            'option_1' => 'tseT',
            'option_2' => 'Test',
            'option_3' => 'Error',
            'option_4' => 'tseT ',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "example";\necho str_word_count($var);\n?>\n```',
            'option_1' => '1',
            'option_2' => '2',
            'option_3' => '3',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "hello world";\necho ucwords($var);\n?>\n```',
            'option_1' => 'Hello World',
            'option_2' => 'hello world',
            'option_3' => 'HELLO WORLD',
            'option_4' => 'Error',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
        [
            'question' => 'Kết quả của đoạn mã sau là gì?\n\n```php\n<?php\n$var = "   hello   ";\necho strlen(trim($var));\n?>\n```',
            'option_1' => '5',
            'option_2' => '7',
            'option_3' => 'Error',
            'option_4' => '10',
            'answer' => 1,
            'created_at' => now(),
            'updated_at' => now(),
        ],
    ];
    $this->essays_php =
    [
        [
            'question' => 'Để khai báo một biến trong PHP, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]$variable = "value";[/code]',
            'blanks' => 'var',
        ],
        [
            'question' => 'Khi bạn cần kết nối với cơ sở dữ liệu MySQL trong PHP, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$conn = mysqli_connect("host", "user", "pass", "db");[/code]',
            'blanks' => 'mysqli_connect',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_array($arr)) { /* ... */ }[/code]',
            'blanks' => 'is_array',
        ],
        [
            'question' => 'Khi bạn cần định nghĩa một hàm trong PHP, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]function myFunction() { return "Hello"; }[/code]',
            'blanks' => 'function',
        ],
        [
            'question' => 'Để lấy giá trị từ một tham số GET trong URL, bạn có thể sử dụng biến toàn cục [blank_1]. Ví dụ: [code]$value = $_GET["param"];[/code]',
            'blanks' => '$_GET',
        ],
        [
            'question' => 'Khi bạn cần xuất dữ liệu ra trình duyệt, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]echo "Hello, World!";[/code]',
            'blanks' => 'echo',
        ],
        [
            'question' => 'Để tạo một lớp trong PHP, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]class MyClass { public $property; }[/code]',
            'blanks' => 'class',
        ],
        [
            'question' => 'Để lấy ngày hiện tại trong PHP, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]echo date("Y-m-d");[/code]',
            'blanks' => 'date',
        ],
        [
            'question' => 'Để nối chuỗi trong PHP, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có được thiết lập không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (isset($var)) { /* ... */ }[/code]',
            'blanks' => 'isset',
        ],
        [
            'question' => 'Để xử lý dữ liệu từ một biểu mẫu POST, bạn có thể sử dụng biến toàn cục [blank_1]. Ví dụ: [code]$name = $_POST["name"];[/code]',
            'blanks' => '$_POST',
        ],
        [
            'question' => 'Để lặp qua các phần tử của mảng trong PHP, bạn có thể sử dụng vòng lặp [blank_1]. Ví dụ: [code]foreach ($arr as $value) { echo $value; }[/code]',
            'blanks' => 'foreach',
        ],
        [
            'question' => 'Khi bạn cần truyền tham số vào một hàm mà không thay đổi giá trị gốc, bạn có thể truyền tham số theo [blank_1]. Ví dụ: [code]function add($a, $b) { return $a + $b; }[/code]',
            'blanks' => 'value',
        ],
        [
            'question' => 'Để kiểm tra xem một chuỗi có chứa một chuỗi con không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (strpos($str, "sub") !== false) { /* ... */ }[/code]',
            'blanks' => 'strpos',
        ],
        [
            'question' => 'Để tải một tệp trong PHP, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]include "file.php";[/code]',
            'blanks' => 'include',
        ],
        [
            'question' => 'Khi bạn cần gán giá trị mặc định cho tham số trong hàm, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]function greet($name = "World") { echo "Hello, " . $name; }[/code]',
            'blanks' => 'default parameter',
        ],
        [
            'question' => 'Để chuyển đổi một chuỗi thành số nguyên, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$num = intval($str);[/code]',
            'blanks' => 'intval',
        ],
        [
            'question' => 'Khi bạn cần tạo một đối tượng từ một lớp trong PHP, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]$obj = new MyClass();[/code]',
            'blanks' => 'new',
        ],
        [
            'question' => 'Để kiểm tra nếu một biến có phải là số không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_numeric($var)) { /* ... */ }[/code]',
            'blanks' => 'is_numeric',
        ],
        [
            'question' => 'Khi bạn cần trả về một giá trị từ hàm, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]return $value;[/code]',
            'blanks' => 'return',
        ],
        [
            'question' => 'Để loại bỏ khoảng trắng đầu và cuối của một chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$trimmed = trim($str);[/code]',
            'blanks' => 'trim',
        ],
        [
            'question' => 'Để tạo một mảng với các chỉ số từ 0 trở đi, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$arr = [1, 2, 3];[/code]',
            'blanks' => 'array',
        ],
        [
            'question' => 'Khi bạn cần lấy tất cả các giá trị từ mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$values = array_values($arr);[/code]',
            'blanks' => 'array_values',
        ],
        [
            'question' => 'Để nối nhiều chuỗi thành một chuỗi duy nhất, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$combined = implode(" ", $arr);[/code]',
            'blanks' => 'implode',
        ],
        [
            'question' => 'Khi bạn cần thực hiện một hành động với từng phần tử trong mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_walk($arr, function(&$item) { $item *= 2; });[/code]',
            'blanks' => 'array_walk',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là chuỗi không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_string($var)) { /* ... */ }[/code]',
            'blanks' => 'is_string',
        ],
        [
            'question' => 'Để xóa một phần tử khỏi mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]unset($arr[2]);[/code]',
            'blanks' => 'unset',
        ],
        [
            'question' => 'Khi bạn cần ghép hai chuỗi lại với nhau, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Để tạo một mảng đa chiều trong PHP, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$arr = [[1, 2], [3, 4]];[/code]',
            'blanks' => 'array',
        ],
        [
            'question' => 'Để lấy phần tử đầu tiên của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$first = reset($arr);[/code]',
            'blanks' => 'reset',
        ],
        [
            'question' => 'Khi bạn cần kết hợp các phần tử của mảng thành một chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$str = implode(", ", $arr);[/code]',
            'blanks' => 'implode',
        ],
        [
            'question' => 'Để lấy phần tử cuối cùng của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$last = end($arr);[/code]',
            'blanks' => 'end',
        ],
        [
            'question' => 'Khi bạn cần làm việc với chuỗi và thay thế một phần của chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$newStr = str_replace("old", "new", $str);[/code]',
            'blanks' => 'str_replace',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một số nguyên không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_int($var)) { /* ... */ }[/code]',
            'blanks' => 'is_int',
        ],
        [
            'question' => 'Để tạo một chuỗi từ một mảng các phần tử, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$str = join(", ", $arr);[/code]',
            'blanks' => 'join',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_array($var)) { /* ... */ }[/code]',
            'blanks' => 'is_array',
        ],
        [
            'question' => 'Để lấy tên của một lớp trong PHP, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]echo get_class($obj);[/code]',
            'blanks' => 'get_class',
        ],
        [
            'question' => 'Khi bạn cần tạo một chuỗi lặp lại nhiều lần, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$str = str_repeat("A", 5);[/code]',
            'blanks' => 'str_repeat',
        ],
        [
            'question' => 'Để lấy số lượng phần tử của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$count = count($arr);[/code]',
            'blanks' => 'count',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra nếu một giá trị có nằm trong mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (in_array("value", $arr)) { /* ... */ }[/code]',
            'blanks' => 'in_array',
        ],
        [
            'question' => 'Để lấy phần tử đầu tiên của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$first = reset($arr);[/code]',
            'blanks' => 'reset',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một chuỗi có phải là số không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_numeric($str)) { /* ... */ }[/code]',
            'blanks' => 'is_numeric',
        ],
        [
            'question' => 'Để lấy tất cả các khóa của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$keys = array_keys($arr);[/code]',
            'blanks' => 'array_keys',
        ],
        [
            'question' => 'Khi bạn cần xóa một phần tử từ mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]unset($arr[2]);[/code]',
            'blanks' => 'unset',
        ],
        [
            'question' => 'Để thay thế một phần của chuỗi bằng một chuỗi khác, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$newStr = str_replace("old", "new", $str);[/code]',
            'blanks' => 'str_replace',
        ],
        [
            'question' => 'Khi bạn cần phân tách một chuỗi thành một mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$arr = explode(",", $str);[/code]',
            'blanks' => 'explode',
        ],
        [
            'question' => 'Để nối nhiều chuỗi với nhau, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Để kiểm tra nếu một biến có phải là một đối tượng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_object($var)) { /* ... */ }[/code]',
            'blanks' => 'is_object',
        ],
        [
            'question' => 'Khi bạn cần tạo một biến toàn cục từ một biến trong hàm, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]global $var;[/code]',
            'blanks' => 'global',
        ],
        [
            'question' => 'Để chuyển đổi một chuỗi thành số thực, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$num = floatval($str);[/code]',
            'blanks' => 'floatval',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra một chuỗi có phải là một email hợp lệ không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (filter_var($email, FILTER_VALIDATE_EMAIL)) { /* ... */ }[/code]',
            'blanks' => 'filter_var',
        ],
        [
            'question' => 'Để gán giá trị cho một thuộc tính trong một lớp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj->property = "value";[/code]',
            'blanks' => '->',
        ],
        [
            'question' => 'Khi bạn cần tạo một mảng kết hợp trong PHP, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$arr = ["key" => "value"];[/code]',
            'blanks' => 'array',
        ],
        [
            'question' => 'Để kiểm tra nếu một biến đã được khai báo hay chưa, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (isset($var)) { /* ... */ }[/code]',
            'blanks' => 'isset',
        ],
        [
            'question' => 'Khi bạn cần phân tách một chuỗi thành mảng dựa trên dấu phân cách, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$arr = explode(",", $str);[/code]',
            'blanks' => 'explode',
        ],
        [
            'question' => 'Để thực hiện một hành động sau khi một điều kiện được kiểm tra, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]if ($condition) { /* ... */ }[/code]',
            'blanks' => 'if',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một chuỗi không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_string($var)) { /* ... */ }[/code]',
            'blanks' => 'is_string',
        ],
        [
            'question' => 'Để xóa một phần tử khỏi mảng theo khóa, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]unset($arr["key"]);[/code]',
            'blanks' => 'unset',
        ],
        [
            'question' => 'Khi bạn cần chuyển đổi một biến thành chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$str = strval($var);[/code]',
            'blanks' => 'strval',
        ],
        [
            'question' => 'Để thay thế các ký tự trong chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$newStr = strtr($str, "abc", "123");[/code]',
            'blanks' => 'strtr',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra nếu một biến là null, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_null($var)) { /* ... */ }[/code]',
            'blanks' => 'is_null',
        ],
        [
            'question' => 'Để lấy số lượng ký tự trong chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$length = strlen($str);[/code]',
            'blanks' => 'strlen',
        ],
        [
            'question' => 'Khi bạn cần truy cập các phần tử của mảng kết hợp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$value = $arr["key"];[/code]',
            'blanks' => 'bracket notation',
        ],
        [
            'question' => 'Để làm việc với thời gian và ngày tháng trong PHP, bạn có thể sử dụng lớp [blank_1]. Ví dụ: [code]$date = new DateTime();[/code]',
            'blanks' => 'DateTime',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra một biến có phải là số thực không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_float($var)) { /* ... */ }[/code]',
            'blanks' => 'is_float',
        ],
        [
            'question' => 'Để kiểm tra xem một chuỗi có phải là số nguyên không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_int($var)) { /* ... */ }[/code]',
            'blanks' => 'is_int',
        ],
        [
            'question' => 'Để lấy một phần của chuỗi từ vị trí chỉ định, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$substr = substr($str, 0, 5);[/code]',
            'blanks' => 'substr',
        ],
        [
            'question' => 'Khi bạn cần tạo một chuỗi từ mảng các phần tử, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$str = join(" ", $arr);[/code]',
            'blanks' => 'join',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là số không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_numeric($var)) { /* ... */ }[/code]',
            'blanks' => 'is_numeric',
        ],
        [
            'question' => 'Khi bạn cần lấy phần tử cuối cùng của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$last = array_pop($arr);[/code]',
            'blanks' => 'array_pop',
        ],
        [
            'question' => 'Để tạo một mảng mới với các phần tử đã sắp xếp, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]sort($arr);[/code]',
            'blanks' => 'sort',
        ],
        [
            'question' => 'Khi bạn cần kết hợp các phần tử của mảng thành một chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$str = implode(",", $arr);[/code]',
            'blanks' => 'implode',
        ],
        [
            'question' => 'Để lấy tất cả các giá trị từ mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$values = array_values($arr);[/code]',
            'blanks' => 'array_values',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là một mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_array($var)) { /* ... */ }[/code]',
            'blanks' => 'is_array',
        ],
        [
            'question' => 'Để thay thế một phần của chuỗi bằng một chuỗi khác, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$newStr = str_replace("find", "replace", $str);[/code]',
            'blanks' => 'str_replace',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là null không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_null($var)) { /* ... */ }[/code]',
            'blanks' => 'is_null',
        ],
        [
            'question' => 'Để kiểm tra xem một chuỗi có chứa một chuỗi con không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (strpos($str, "find") !== false) { /* ... */ }[/code]',
            'blanks' => 'strpos',
        ],
        [
            'question' => 'Khi bạn cần lấy các phần tử của mảng theo một khóa, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$values = array_column($arr, "column_name");[/code]',
            'blanks' => 'array_column',
        ],
        [
            'question' => 'Để gán giá trị cho biến toàn cục trong hàm, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]global $var;[/code]',
            'blanks' => 'global',
        ],
        [
            'question' => 'Khi bạn cần lấy số lượng phần tử trong mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$count = count($arr);[/code]',
            'blanks' => 'count',
        ],
        [
            'question' => 'Để thực hiện một hành động sau khi một điều kiện được kiểm tra, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]if ($condition) { /* ... */ }[/code]',
            'blanks' => 'if',
        ],
        [
            'question' => 'Để làm việc với chuỗi và phân tách nó thành mảng dựa trên dấu phân cách, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$arr = explode(",", $str);[/code]',
            'blanks' => 'explode',
        ],
        [
            'question' => 'Khi bạn cần gán giá trị cho thuộc tính của đối tượng, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj->property = "value";[/code]',
            'blanks' => '->',
        ],
        [
            'question' => 'Để lấy các khóa của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$keys = array_keys($arr);[/code]',
            'blanks' => 'array_keys',
        ],
        [
            'question' => 'Để nối nhiều chuỗi với nhau, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Khi bạn cần lấy phần tử đầu tiên của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$first = reset($arr);[/code]',
            'blanks' => 'reset',
        ],
        [
            'question' => 'Để chuyển đổi một chuỗi thành số nguyên, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$num = intval($str);[/code]',
            'blanks' => 'intval',
        ],
        [
            'question' => 'Khi bạn cần thay thế một chuỗi con trong một chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$newStr = str_replace("old", "new", $str);[/code]',
            'blanks' => 'str_replace',
        ],
        [
            'question' => 'Để kiểm tra nếu một biến có phải là số không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_numeric($var)) { /* ... */ }[/code]',
            'blanks' => 'is_numeric',
        ],
        [
            'question' => 'Khi bạn cần tạo một lớp kế thừa từ lớp cha, bạn có thể sử dụng cú pháp [blank_1] trong PHP. Ví dụ: [code]class Child extends Parent { /* ... */ }[/code]',
            'blanks' => 'extends',
        ],
        [
            'question' => 'Để kiểm tra một biến có phải là một đối tượng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_object($var)) { /* ... */ }[/code]',
            'blanks' => 'is_object',
        ],
        [
            'question' => 'Khi bạn cần tạo một mảng từ các đối tượng của lớp, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_map("function", $objects);[/code]',
            'blanks' => 'array_map',
        ],
        [
            'question' => 'Để kết nối với cơ sở dữ liệu MySQL, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$conn = mysqli_connect("host", "user", "password", "database");[/code]',
            'blanks' => 'mysqli_connect',
        ],
        [
            'question' => 'Khi bạn cần xử lý dữ liệu POST trong PHP, bạn có thể sử dụng biến toàn cục [blank_1]. Ví dụ: [code]$data = $_POST["key"];[/code]',
            'blanks' => '$_POST',
        ],
        [
            'question' => 'Để thực hiện một truy vấn SQL với PDO, bạn có thể sử dụng phương thức [blank_1]. Ví dụ: [code]$stmt = $pdo->prepare("SELECT * FROM table");[/code]',
            'blanks' => 'prepare',
        ],
        [
            'question' => 'Khi bạn cần tải một lớp tự động từ một thư mục, bạn có thể sử dụng [blank_1]. Ví dụ: [code]spl_autoload_register(function ($class) { include $class . ".php"; });[/code]',
            'blanks' => 'spl_autoload_register',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if (is_array($var)) { /* ... */ }[/code]',
            'blanks' => 'is_array',
        ],
        [
            'question' => 'Khi bạn cần cập nhật bản ghi trong cơ sở dữ liệu, bạn có thể sử dụng phương thức [blank_1] của PDO. Ví dụ: [code]$stmt = $pdo->execute(["value"]);[/code]',
            'blanks' => 'execute',
        ],
        [
            'question' => 'Để gửi một email trong PHP, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]mail($to, $subject, $message, $headers);[/code]',
            'blanks' => 'mail',
        ],
        [
            'question' => 'Khi bạn cần thêm một phần tử vào cuối mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_push($arr, $value);[/code]',
            'blanks' => 'array_push',
        ],
        [
            'question' => 'Để xử lý ngoại lệ trong PHP, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]try { /* ... */ } catch (Exception $e) { /* ... */ }[/code]',
            'blanks' => 'try, catch',
        ],
        [
            'question' => 'Khi bạn cần gán giá trị cho thuộc tính của một đối tượng trong PHP, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj->property = "value";[/code]',
            'blanks' => '->',
        ],
        [
            'question' => 'Để định nghĩa một phương thức tĩnh trong một lớp, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]public static function method() { /* ... */ }[/code]',
            'blanks' => 'static',
        ],
        [
            'question' => 'Khi bạn cần lấy một phần của chuỗi dựa trên vị trí, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]substr($str, 0, 5);[/code]',
            'blanks' => 'substr',
        ],
        [
            'question' => 'Để xử lý lỗi trong PHP, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]if (!$result) { /* ... */ }[/code]',
            'blanks' => 'if',
        ],
        [
            'question' => 'Khi bạn cần lấy tất cả các giá trị của mảng kết hợp, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_values($arr);[/code]',
            'blanks' => 'array_values',
        ],
        [
            'question' => 'Để làm việc với các ngày tháng trong PHP, bạn có thể sử dụng lớp [blank_1]. Ví dụ: [code]$date = new DateTime();[/code]',
            'blanks' => 'DateTime',
        ],
        [
            'question' => 'Khi bạn cần xác thực một địa chỉ email trong PHP, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]filter_var($email, FILTER_VALIDATE_EMAIL);[/code]',
            'blanks' => 'filter_var',
        ],
        [
            'question' => 'Để xóa một phần tử khỏi mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]unset($arr[$key]);[/code]',
            'blanks' => 'unset',
        ],
        [
            'question' => 'Khi bạn cần lấy các khóa của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_keys($arr);[/code]',
            'blanks' => 'array_keys',
        ],
        [
            'question' => 'Để nối nhiều chuỗi với nhau, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Khi bạn cần phân tách một chuỗi thành mảng dựa trên dấu phân cách, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]explode(",", $str);[/code]',
            'blanks' => 'explode',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một số nguyên không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_int($var);[/code]',
            'blanks' => 'is_int',
        ],
        [
            'question' => 'Khi bạn cần tạo một mảng từ chuỗi dữ liệu, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]preg_split("/,/", $str);[/code]',
            'blanks' => 'preg_split',
        ],
        [
            'question' => 'Để lấy số lượng phần tử của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]count($arr);[/code]',
            'blanks' => 'count',
        ],
        [
            'question' => 'Khi bạn cần tạo một mảng từ một chuỗi dữ liệu, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]explode(",", $str);[/code]',
            'blanks' => 'explode',
        ],
        [
            'question' => 'Để chuyển đổi một biến thành số thực, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]floatval($var);[/code]',
            'blanks' => 'floatval',
        ],
        [
            'question' => 'Khi bạn cần lấy tất cả các phần tử của mảng theo một khóa, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_column($arr, "key");[/code]',
            'blanks' => 'array_column',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một đối tượng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_object($var);[/code]',
            'blanks' => 'is_object',
        ],
        [
            'question' => 'Khi bạn cần lấy tên lớp của một đối tượng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]get_class($obj);[/code]',
            'blanks' => 'get_class',
        ],
        [
            'question' => 'Để lấy một phần của chuỗi từ vị trí chỉ định, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]substr($str, 0, 5);[/code]',
            'blanks' => 'substr',
        ],
        [
            'question' => 'Khi bạn cần gán giá trị cho một thuộc tính trong lớp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj->property = "value";[/code]',
            'blanks' => '->',
        ],
        [
            'question' => 'Để thực hiện các hành động với đối tượng và lớp trong PHP, bạn có thể sử dụng các phương thức [blank_1]. Ví dụ: [code]public function method() { /* ... */ }[/code]',
            'blanks' => 'public function',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là null không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_null($var);[/code]',
            'blanks' => 'is_null',
        ],
        [
            'question' => 'Để tạo một đối tượng mới từ lớp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj = new ClassName();[/code]',
            'blanks' => 'new',
        ],
        [
            'question' => 'Khi bạn cần kết hợp các phần tử của mảng thành một chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]implode(",", $arr);[/code]',
            'blanks' => 'implode',
        ],
        [
            'question' => 'Để gán giá trị cho một biến toàn cục trong một phương thức, bạn có thể sử dụng từ khóa [blank_1]. Ví dụ: [code]global $var;[/code]',
            'blanks' => 'global',
        ],
        [
            'question' => 'Khi bạn cần thực hiện một hành động sau khi một điều kiện được kiểm tra, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]if ($condition) { /* ... */ }[/code]',
            'blanks' => 'if',
        ],
        [
            'question' => 'Để kiểm tra một biến có phải là một số không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_numeric($var);[/code]',
            'blanks' => 'is_numeric',
        ],
        [
            'question' => 'Khi bạn cần nối các chuỗi trong PHP, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Để thay thế một phần của chuỗi bằng một chuỗi khác, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]str_replace("find", "replace", $str);[/code]',
            'blanks' => 'str_replace',
        ],
        [
            'question' => 'Khi bạn cần lấy các phần tử đầu tiên của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]reset($arr);[/code]',
            'blanks' => 'reset',
        ],
        [
            'question' => 'Để thực hiện các hành động với lớp và đối tượng trong PHP, bạn có thể sử dụng phương thức [blank_1]. Ví dụ: [code]public function method() { /* ... */ }[/code]',
            'blanks' => 'public function',
        ],
        [
            'question' => 'Khi bạn cần xóa một phần tử khỏi mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]unset($arr[$key]);[/code]',
            'blanks' => 'unset',
        ],
        [
            'question' => 'Để lấy số lượng phần tử của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]count($arr);[/code]',
            'blanks' => 'count',
        ],
        [
            'question' => 'Khi bạn cần xử lý dữ liệu từ yêu cầu HTTP, bạn có thể sử dụng biến toàn cục [blank_1]. Ví dụ: [code]$_GET["key"];[/code]',
            'blanks' => '$_GET',
        ],
        [
            'question' => 'Để tạo một mảng từ các phần tử của chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]preg_split("/,/", $str);[/code]',
            'blanks' => 'preg_split',
        ],
        [
            'question' => 'Khi bạn cần tạo một đối tượng từ lớp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj = new ClassName();[/code]',
            'blanks' => 'new',
        ],
        [
            'question' => 'Để lấy tất cả các giá trị của mảng kết hợp, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_values($arr);[/code]',
            'blanks' => 'array_values',
        ],
        [
            'question' => 'Khi bạn cần gán giá trị cho thuộc tính của một đối tượng, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj->property = "value";[/code]',
            'blanks' => '->',
        ],
        [
            'question' => 'Để xác thực định dạng của một chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]filter_var($var, FILTER_VALIDATE_INT);[/code]',
            'blanks' => 'filter_var',
        ],
        [
            'question' => 'Khi bạn cần chuyển đổi một chuỗi thành số nguyên, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]intval($str);[/code]',
            'blanks' => 'intval',
        ],
        [
            'question' => 'Để thực hiện một hành động sau khi một điều kiện được kiểm tra, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]if ($condition) { /* ... */ }[/code]',
            'blanks' => 'if',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra một biến có phải là một đối tượng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_object($var);[/code]',
            'blanks' => 'is_object',
        ],
        [
            'question' => 'Để chuyển đổi một chuỗi thành số thực, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]floatval($str);[/code]',
            'blanks' => 'floatval',
        ],
        [
            'question' => 'Khi bạn cần kết hợp nhiều chuỗi với nhau, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là null không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_null($var);[/code]',
            'blanks' => 'is_null',
        ],
        [
            'question' => 'Khi bạn cần tạo một đối tượng mới từ lớp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj = new ClassName();[/code]',
            'blanks' => 'new',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_array($var);[/code]',
            'blanks' => 'is_array',
        ],
        [
            'question' => 'Khi bạn cần thay thế một phần của chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]str_replace("old", "new", $str);[/code]',
            'blanks' => 'str_replace',
        ],
        [
            'question' => 'Để lấy các khóa của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_keys($arr);[/code]',
            'blanks' => 'array_keys',
        ],
        [
            'question' => 'Để tạo một đối tượng từ lớp trong PHP, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj = new [blank_2]();[/code]',
            'blanks' => 'new, ClassName',
        ],
        [
            'question' => 'Khi bạn cần thực hiện một truy vấn SQL và sử dụng PDO, bạn có thể gọi phương thức [blank_1]. Ví dụ: [code]$stmt = $pdo->[blank_2]("SELECT * FROM table WHERE id = :id");[/code]',
            'blanks' => 'prepare, execute',
        ],
        [
            'question' => 'Để lấy giá trị của một phần tử từ mảng kết hợp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$value = $arr["[blank_2]"];[/code]',
            'blanks' => 'key',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là số nguyên không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_int, is_integer',
        ],
        [
            'question' => 'Để kết nối với cơ sở dữ liệu MySQL bằng mysqli, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$conn = [blank_2]("host", "user", "password", "database");[/code]',
            'blanks' => 'mysqli_connect, mysqli',
        ],
        [
            'question' => 'Khi bạn cần xử lý dữ liệu từ biểu mẫu HTML, bạn có thể sử dụng biến toàn cục [blank_1]. Ví dụ: [code]$data = $_[blank_2]["field"];[/code]',
            'blanks' => 'POST, GET',
        ],
        [
            'question' => 'Để thực hiện các thao tác với đối tượng trong PHP, bạn có thể định nghĩa một phương thức [blank_1]. Ví dụ: [code]public function [blank_2]() { /* ... */ }[/code]',
            'blanks' => 'methodName, public',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra một biến có phải là mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_array, array',
        ],
        [
            'question' => 'Để thay thế một phần của chuỗi bằng một chuỗi khác, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]str_replace("[blank_2]", "[blank_3]", $str);[/code]',
            'blanks' => 'str_replace, search, replace',
        ],
        [
            'question' => 'Khi bạn cần lấy số lượng phần tử của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$count = [blank_2]($arr);[/code]',
            'blanks' => 'count, sizeof',
        ],
        [
            'question' => 'Để nối nhiều chuỗi thành một, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là null không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_null, null',
        ],
        [
            'question' => 'Để lấy các khóa của mảng kết hợp, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]$keys = [blank_2]($arr);[/code]',
            'blanks' => 'array_keys, key',
        ],
        [
            'question' => 'Khi bạn cần lấy một phần của chuỗi từ một vị trí nhất định, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]substr($str, [blank_2], [blank_3]);[/code]',
            'blanks' => 'substr, start, length',
        ],
        [
            'question' => 'Để tạo một đối tượng mới từ lớp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj = new [blank_2]();[/code]',
            'blanks' => 'new, ClassName',
        ],
        [
            'question' => 'Khi bạn cần xóa một phần tử khỏi mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]unset($arr[[blank_2]]);[/code]',
            'blanks' => 'unset, key',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một đối tượng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_object, object',
        ],
        [
            'question' => 'Khi bạn cần chuyển đổi một chuỗi thành số thực, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]floatval($str);[/code]',
            'blanks' => 'floatval',
        ],
        [
            'question' => 'Để kiểm tra một biến có phải là một số không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_numeric, numeric',
        ],
        [
            'question' => 'Khi bạn cần thay thế tất cả các kết quả khớp với một biểu thức chính quy trong chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]preg_replace("/pattern/", "replacement", $str);[/code]',
            'blanks' => 'preg_replace',
        ],
        [
            'question' => 'Để tạo một mảng từ chuỗi dữ liệu, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]preg_split("/,/", $str);[/code]',
            'blanks' => 'preg_split',
        ],
        [
            'question' => 'Khi bạn cần lấy tất cả các phần tử của mảng theo một khóa nhất định, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_column($arr, "[blank_2]");[/code]',
            'blanks' => 'array_column, key',
        ],
        [
            'question' => 'Để chuyển đổi một chuỗi thành số nguyên, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]intval($str);[/code]',
            'blanks' => 'intval',
        ],
        [
            'question' => 'Khi bạn cần lấy các phần tử đầu tiên của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]reset($arr);[/code]',
            'blanks' => 'reset',
        ],
        [
            'question' => 'Để kiểm tra một biến có phải là mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_array, array',
        ],
        [
            'question' => 'Khi bạn cần xác thực một địa chỉ email, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]filter_var($email, FILTER_VALIDATE_EMAIL);[/code]',
            'blanks' => 'filter_var',
        ],
        [
            'question' => 'Để lấy số lượng phần tử của mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]count($arr);[/code]',
            'blanks' => 'count',
        ],
        [
            'question' => 'Khi bạn cần xử lý dữ liệu từ biểu mẫu và mã hóa đầu vào, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]htmlspecialchars($input);[/code]',
            'blanks' => 'htmlspecialchars',
        ],
        [
            'question' => 'Để kiểm tra xem một biến có phải là một đối tượng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_object, object',
        ],
        [
            'question' => 'Khi bạn cần truy cập một thuộc tính của lớp từ bên ngoài lớp, bạn cần phải đảm bảo thuộc tính đó có mức truy cập là [blank_1]. Ví dụ: [code]$obj->property;[/code]',
            'blanks' => 'public',
        ],
        [
            'question' => 'Để lấy tất cả các giá trị của mảng kết hợp, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_values($arr);[/code]',
            'blanks' => 'array_values',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là một chuỗi không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_string($var);[/code]',
            'blanks' => 'is_string',
        ],
        [
            'question' => 'Để nối nhiều chuỗi thành một chuỗi, bạn có thể sử dụng toán tử [blank_1]. Ví dụ: [code]$str = "Hello " . "World";[/code]',
            'blanks' => '.',
        ],
        [
            'question' => 'Khi bạn cần chuyển đổi một chuỗi thành số thực, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]floatval($str);[/code]',
            'blanks' => 'floatval',
        ],
        [
            'question' => 'Để kiểm tra một biến có phải là mảng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_array, array',
        ],
        [
            'question' => 'Khi bạn cần lấy giá trị của một khóa cụ thể trong mảng kết hợp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$value = $arr["[blank_2]"];[/code]',
            'blanks' => 'key',
        ],
        [
            'question' => 'Để thay thế tất cả các kết quả khớp với một biểu thức chính quy trong chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]preg_replace("/pattern/", "replacement", $str);[/code]',
            'blanks' => 'preg_replace',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là số thực không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_float, float',
        ],
        [
            'question' => 'Để gán giá trị cho một thuộc tính của đối tượng trong lớp, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj->property = "value";[/code]',
            'blanks' => '->',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là boolean không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]is_bool($var);[/code]',
            'blanks' => 'is_bool',
        ],
        [
            'question' => 'Để tạo một mảng từ các phần tử của chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]explode(",", $str);[/code]',
            'blanks' => 'explode',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra một biến có phải là số không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_numeric, numeric',
        ],
        [
            'question' => 'Để lấy tất cả các giá trị của mảng kết hợp, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]array_values($arr);[/code]',
            'blanks' => 'array_values',
        ],
        [
            'question' => 'Khi bạn cần thay thế một phần của chuỗi, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]str_replace("old", "new", $str);[/code]',
            'blanks' => 'str_replace',
        ],
        [
            'question' => 'Để thực hiện một hành động sau khi một điều kiện được kiểm tra, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]if ($condition) { /* ... */ }[/code]',
            'blanks' => 'if',
        ],
        [
            'question' => 'Khi bạn cần thực hiện một hành động sau khi một điều kiện được kiểm tra, bạn có thể sử dụng cấu trúc [blank_1]. Ví dụ: [code]if ($condition) { /* ... */ }[/code]',
            'blanks' => 'if',
        ],
        [
            'question' => 'Để lấy một phần của chuỗi từ một vị trí nhất định, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]substr($str, [blank_2], [blank_3]);[/code]',
            'blanks' => 'substr, start, length',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra một biến có phải là chuỗi không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_string, string',
        ],
        [
            'question' => 'Để lấy giá trị đầu tiên từ một mảng, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]reset($arr);[/code]',
            'blanks' => 'reset',
        ],
        [
            'question' => 'Khi bạn cần kiểm tra xem một biến có phải là một đối tượng không, bạn có thể sử dụng hàm [blank_1]. Ví dụ: [code]if ([blank_2]($var)) { /* ... */ }[/code]',
            'blanks' => 'is_object, object',
        ],
        [
            'question' => 'Để tạo một đối tượng từ lớp trong PHP, bạn có thể sử dụng cú pháp [blank_1]. Ví dụ: [code]$obj = new [blank_2]();[/code]',
            'blanks' => 'new, ClassName',
        ],
    ];
}
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        //
    }
}
